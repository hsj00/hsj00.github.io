<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://hsj00.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hsj00.github.io/" rel="alternate" type="text/html" hreflang="ko"/><updated>2025-06-14T09:03:10+00:00</updated><id>https://hsj00.github.io/feed.xml</id><title type="html">blank</title><subtitle>Blogging for exploring fun things / Based on [*folio](https://github.com/bogoli/-folio) design </subtitle><entry><title type="html">Git 사용법 정리 01 - 코딩애플 온라인 강좌를 바탕으로</title><link href="https://hsj00.github.io/blog/2025/git-study/" rel="alternate" type="text/html" title="Git 사용법 정리 01 - 코딩애플 온라인 강좌를 바탕으로"/><published>2025-06-14T00:00:00+00:00</published><updated>2025-06-14T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2025/git-study</id><content type="html" xml:base="https://hsj00.github.io/blog/2025/git-study/"><![CDATA[<h1 id="git">Git?</h1> <p>Git은 프로그래밍 공부를 하다보면 한 번쯤 들어볼 수 있는 이름이다. 내 블로그를 만들 때도 Git과 Github를 활용했지만 사실 어떻게 쓰는지 잘 모른다. 이번 기회에 코딩애플 무료 강의를 공부하며 배운 내용을 정리해보고자 한다.</p> <hr/> <h2 id="git은-무엇인가-왜-공부해야하는가">Git은 무엇인가? 왜 공부해야하는가?</h2> <ul> <li>Git은 버전 관리 소프트웨어다. 코딩 중 파일 변경 이력을 효율적으로 기록하고 관리하기위한 도구이다.</li> <li>Git을 배워두면 좋은 이유들은 다음과 같다. <ul> <li>코드 버전 관리 및 시간 되돌리기 능력: 코딩 중 과거 특정 시점으로 코드를 되돌리는게 가능하다. 이는 개발 과정에서 발생할 수 있는 오류나 원치 않는 변경사항으로부터 코드를 보호하고 안정적인 상태로 복원할 수 있게 해주는 핵심 기능이다.</li> <li>팀 협업의 필수 도구: 소프트웨어 개발에서 팀원들과 코드 충돌없이 효율적으로 협업하기 좋은 도구다. 특히 브랜치 기반으로 협업하는 방법을 익히면 불필요한 코드 충돌이나 변경 없이 다른 사람들의 코드를 가져와 협업할 수 있다.</li> </ul> </li> <li>이러한 이유들로 인해 Git을 사용할 수 있다면 개인 프로젝트의 효율적인 관리부터 팀 협업, 넓게는 소프트웨어 개발자로서의 취업 및 팀 관리와 리더십 역량 강화등에도 도움이 될 수 있다.</li> <li>그렇기 때문에 내 전문 분야는 아니지만 적어도 알아두면 도움이 될 것 같아서 Git을 공부한다.</li> </ul> <h2 id="git-설치">Git 설치?</h2> <ul> <li>윈도우에서는 <code class="language-plaintext highlighter-rouge">Git windows</code>를 검색해서 다운로드 받은 후 설치하면 된다.</li> <li>맥북에서는 설치하는 방법이 조금 다르다.</li> </ul> <h3 id="맥북에서-git-설치하기">맥북에서 Git 설치하기</h3> <ul> <li><code class="language-plaintext highlighter-rouge">Homebrew</code> 설치하기</li> <li>터미널에서 <ul> <li><code class="language-plaintext highlighter-rouge">brew install git</code></li> <li><code class="language-plaintext highlighter-rouge">git config --global init.defaultBranch main</code></li> </ul> </li> <li>다 끝난 다음에 git 유저 이름 세팅은 <ul> <li><code class="language-plaintext highlighter-rouge">git config --global user.email "email@email.com"</code></li> <li><code class="language-plaintext highlighter-rouge">git config --global user.name "user name"</code></li> </ul> </li> </ul> <h2 id="기본적인-git-명령어와-사용-방법">기본적인 Git 명령어와 사용 방법</h2> <ul> <li>작업 폴더에서 Git을 이용하고 싶으면 해당 경로에서 터미널을 열어서 <code class="language-plaintext highlighter-rouge">git init</code></li> <li>Git에 버전을 새로 만들 땐 <code class="language-plaintext highlighter-rouge">git add</code>, <code class="language-plaintext highlighter-rouge">git commit</code> 순서대로 <ul> <li><code class="language-plaintext highlighter-rouge">git add filename</code> <ul> <li>작업 폴더의 작업물을 <code class="language-plaintext highlighter-rouge">staging area</code>로 옮김</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">git commit -m 'message'</code> <ul> <li><code class="language-plaintext highlighter-rouge">staging area</code>에 옮겨진 파일을 <code class="language-plaintext highlighter-rouge">repository</code>에 저장</li> </ul> </li> <li>아래 그림은 개념을 도식화 해놓은 것 <img src="/assets/images/posts/2025-06-14-git-study/1749889170136.png" alt="1749889170136"/></li> </ul> </li> <li>다른 Git 명령어들로는 <ul> <li>여러 파일을 동시에 스테이징할 땐 <code class="language-plaintext highlighter-rouge">git add filename1 filename2</code></li> <li>작업 폴더의 모든 파일을 스테이징할 땐 <code class="language-plaintext highlighter-rouge">git add .</code></li> <li>변경된 파일이나 스테이징된 파일을 확인할 땐 <code class="language-plaintext highlighter-rouge">git status</code></li> <li>스테이징된 파일을 취소하고 싶을 땐 <code class="language-plaintext highlighter-rouge">git restore --staged filename</code></li> <li><code class="language-plaintext highlighter-rouge">commit</code> 기록을 한 눈에 파악하고 싶을 땐 <code class="language-plaintext highlighter-rouge">git log --all --oneline</code></li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">VSCode</code>에서 기본적으로 Git을 지원하고 있어서 명령어 몰라도 클릭 몇 번으로 동일한 작업을 할 수 있다. 파일이 많을 땐 이 방법이 더 나을듯.</li> <li>이전 코드와 현재 코드의 차이점을 확인하는 명령어도 있지만 에디터 부가기능을 사용하면 시각적으로 훨씬 정돈된 결과물을 볼 수 있다. 예를 들면 <code class="language-plaintext highlighter-rouge">Git lens</code>나 <code class="language-plaintext highlighter-rouge">Git Graph</code>같은 <code class="language-plaintext highlighter-rouge">VSCode Extensions</code>를 사용할 수 있다.</li> </ul> <h2 id="branch">Branch?</h2> <p>커밋하면서 코딩을 계속 하다보면 새로운 기능을 추가해야하는 경우가 생기기도 한다. 그럴땐 원본 파일에 코드를 새로 추가하고 커밋해도 되지만 혹시 모를 문제 때문에 프로그램이 망가질 위험이 있으니 안전한 방법은 아니다. 안전하게 새로운 기능을 추가하기 위해서 프로젝트의 복사본을 만들고 거기에 먼저 기능을 추가해볼 수 있다. 브랜치는 이런 경우에 사용하기 위해 있는 기능이다.</p> <p>계속 커밋하며 짜온 코드에</p> <p><img src="/assets/images/posts/2025-06-14-git-study/1749889417356.png" alt="1749889417356"/></p> <p>브랜치를 생성해서 복사본을 만든다</p> <p><img src="/assets/images/posts/2025-06-14-git-study/1749889427211.png" alt="1749889427211"/></p> <p><code class="language-plaintext highlighter-rouge">main</code> 브랜치에 <code class="language-plaintext highlighter-rouge">coupon</code> 브랜치를 만들었을 때</p> <p><img src="/assets/images/posts/2025-06-14-git-study/1749889665604.png" alt="1749889665604"/></p> <p>만든 브랜치를 원본과 <code class="language-plaintext highlighter-rouge">merge</code>했을 때</p> <p><img src="/assets/images/posts/2025-06-14-git-study/1749889749195.png" alt="1749889749195"/></p> <h3 id="branch-관련-명령어들">Branch 관련 명령어들</h3> <ul> <li>프로젝트 사본을 만들 땐 <code class="language-plaintext highlighter-rouge">git branch branchname</code></li> <li>브랜치를 이동하고 싶을 땐 <code class="language-plaintext highlighter-rouge">git switch branchname</code></li> <li><code class="language-plaintext highlighter-rouge">branch</code>와 <code class="language-plaintext highlighter-rouge">commit</code> 내역을 한 눈에 그래프로 보고싶으면 <code class="language-plaintext highlighter-rouge">git log --graph --oneline --all</code> <ul> <li><code class="language-plaintext highlighter-rouge">git log</code>하면 나오는 <code class="language-plaintext highlighter-rouge">HEAD</code>는 내 현재 위치</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">main</code> 브랜치에 합쳐주려면 <ul> <li><code class="language-plaintext highlighter-rouge">git switch main</code></li> <li><code class="language-plaintext highlighter-rouge">git merge branchname</code></li> </ul> </li> <li>브랜치를 합칠 때 <code class="language-plaintext highlighter-rouge">CONFLICT</code>가 발생할 경우엔 <ul> <li>파일을 열어서 수정</li> <li><code class="language-plaintext highlighter-rouge">git add</code>하고 <code class="language-plaintext highlighter-rouge">git commit</code>하기</li> </ul> </li> </ul>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Git"/><category term="Programming"/><category term="Study"/><category term="Blog"/><summary type="html"><![CDATA[2025-06-14, Git study note 01]]></summary></entry><entry><title type="html">PEALD 내용 정리 02</title><link href="https://hsj00.github.io/blog/2025/PEALD-study-02/" rel="alternate" type="text/html" title="PEALD 내용 정리 02"/><published>2025-05-21T00:00:00+00:00</published><updated>2025-05-21T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2025/PEALD-study-02</id><content type="html" xml:base="https://hsj00.github.io/blog/2025/PEALD-study-02/"><![CDATA[<h2 id="1356mhz"><strong>13.56MHz??</strong></h2> <p><strong>PEALD(Plasma-Enhanced Atomic Layer Deposition)</strong> 공정에서 <strong>RF 주파수</strong>는 플라즈마 특성과 박막 품질을 결정하는 핵심 변수라고 한다. <strong>13.56 MHz</strong>가 표준으로 사용되며, 이의 정수배 (예: 27.12 MHz, 40.68 MHz, 162 MHz)도 활용된다고 한다. <strong>13.56 MHz</strong>가 표준으로 사용되는 이유와 공정에 어떤 영향을 끼치는지 <strong>Perplexity</strong>를 사용해서 찾아보았다.</p> <h3 id="1-1356-mhz-사용-이유"><strong>1. 13.56 MHz 사용 이유</strong></h3> <h4 id="1-전자기파-간섭-방지"><strong>(1) 전자기파 간섭 방지</strong></h4> <ul> <li>13.56 MHz는 <strong>ISM 밴드(Industrial, Scientific, Medical Band)</strong>로 할당된 주파수로, 통신 시스템과의 간섭 없이 산업용으로 자유롭게 사용 가능</li> <li>국제 규격(<strong>FCC 규정</strong>)에 따라 전자기파 간섭을 최소화하기 위해 선택</li> </ul> <h4 id="2-플라즈마-특성-균형"><strong>(2) 플라즈마 특성 균형</strong></h4> <ul> <li><strong>플라즈마 밀도 vs. 이온 에너지</strong>: <ul> <li><strong>13.56 MHz</strong>는 <strong>높은 플라즈마 밀도</strong>와 <strong>적절한 이온 에너지</strong>를 동시에 확보할 수 있는 최적 지점</li> <li><em>고주파(&gt;13.56 MHz)</em>: 플라즈마 밀도 ↑, 이온 에너지 ↓ → <strong>미세 구조 보호</strong>에 유리</li> <li><em>저주파(&lt;13.56 MHz)</em>: 이온 에너지 ↑ → <strong>기판 손상 리스크</strong> 증가</li> </ul> </li> </ul> <h4 id="3-공정-안정성"><strong>(3) 공정 안정성</strong></h4> <ul> <li>13.56 MHz는 <strong>임피던스 매칭</strong>이 용이하여 전력 손실을 최소화하고, <strong>플라즈마 불균일성</strong>을 방지</li> <li>산업계 표준 장비와 호환성이 높아 유지보수 및 확장이 쉬움</li> </ul> <hr/> <h3 id="2-1356-mhz-정수배2712-4068-162-mhz-등-사용-이유"><strong>2. 13.56 MHz 정수배(27.12, 40.68, 162 MHz 등) 사용 이유</strong></h3> <h4 id="1-고밀도-플라즈마-구현"><strong>(1) 고밀도 플라즈마 구현</strong></h4> <ul> <li><strong>주파수 증가 → 전자 가속 효율 ↑ → 플라즈마 밀도 ↑</strong> <ul> <li><em>예시</em>: 162 MHz(13.56 × 12) 사용 시, 13.56 MHz 대비 <strong>플라즈마 밀도 10배 증가</strong> (1.06×10¹⁰ → 1.06×10¹¹ cm⁻³) <a href="https://pubmed.ncbi.nlm.nih.gov/32942270/">1</a></li> <li>고밀도 플라즈마는 전구체 분해 효율을 높여 <strong>불순물 감소</strong> 및 <strong>균일성 개선</strong>에 기여</li> </ul> </li> </ul> <h4 id="2-이온-에너지-제어"><strong>(2) 이온 에너지 제어</strong></h4> <ul> <li><strong>VHF(Very High Frequency) 영역(30–300 MHz)</strong>에서: <ul> <li><strong>이온 에너지 분포가 좁아지고</strong>, 평균 에너지가 감소 → <strong>표면 손상 최소화</strong></li> <li><em>데이터</em>: 162 MHz에서 <strong>Vp-Vf(이온 에너지 지표)</strong>가 13.56 MHz 대비 50% 감소 <a href="https://pubmed.ncbi.nlm.nih.gov/32942270/">1</a></li> </ul> </li> </ul> <h4 id="3-고종횡비-구조-충진-개선"><strong>(3) 고종횡비 구조 충진 개선</strong></h4> <ul> <li>고주파 플라즈마는 <strong>긴 전자 거동 주기</strong>로 인해 고종횡비 트렌치 내부까지 침투 가능: <ul> <li>162 MHz PEALD SiNₓ는 15:1 종횡비 구조에서 <strong>94.8% 스텝 커버리지</strong> 달성 (13.56 MHz 대비 34.6%) <a href="https://pubmed.ncbi.nlm.nih.gov/32942270/">1</a></li> </ul> </li> </ul> <h4 id="4-하모닉-간섭-방지"><strong>(4) 하모닉 간섭 방지</strong></h4> <ul> <li>정수배 주파수 사용 시 <strong>하모닉 주파수 간 상호 간섭</strong>이 발생하지 않아 공정 안정성이 유지됩니다.</li> <li><em>예시</em>: 13.56 MHz 기반 시스템에서 27.12 MHz(2차 하모닉)를 추가하면, 주파수 겹침 없이 독립적 제어 가능</li> </ul> <hr/> <h3 id="3-주파수-선택에-따른-공정-결과-비교"><strong>3. 주파수 선택에 따른 공정 결과 비교</strong></h3> <table> <thead> <tr> <th><strong>주파수</strong></th> <th><strong>플라즈마 밀도</strong></th> <th><strong>이온 에너지</strong></th> <th><strong>스텝 커버리지</strong></th> <th><strong>적용 분야</strong></th> </tr> </thead> <tbody> <tr> <td><strong>13.56 MHz</strong></td> <td>중간</td> <td>중간</td> <td>34.6% (15:1 구조)</td> <td>범용 로직/메모리</td> </tr> <tr> <td><strong>162 MHz</strong></td> <td>높음</td> <td>낮음</td> <td>94.8% (15:1 구조)</td> <td>3D NAND 고종횡비 충진</td> </tr> </tbody> </table> <hr/> <h3 id="4-내용-요약"><strong>4. 내용 요약</strong></h3> <ul> <li><strong>13.56 MHz</strong>는약<strong>규제 준수</strong>, <strong>플라즈마 안정성</strong>, <strong>장비 호환성</strong> 측면에서 표준으로 채택</li> <li><strong>정수배 주파수(27.12, 40.68, 162 MHz)</strong>는 <strong>고밀도 플라즈마</strong>와 <strong>저에너지 이온</strong>을 통해 미세 공정의 한계 극복 가능</li> <li>향후 <strong>고HF(30–300 MHz)</strong> 및 <strong>MMW(밀리미터파)</strong> 대역 확대를 통해 극미세 공정 기술이 진화할 전망</li> </ul> <hr/>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Semiconductor"/><category term="ALD"/><category term="Atomic Layer Deposition"/><category term="PEALD"/><category term="Plasma Enhanced Atomic Layer Deposition"/><category term="Blog"/><summary type="html"><![CDATA[2025-05-21, PEALD study note 02]]></summary></entry><entry><title type="html">PEALD 내용 정리 03</title><link href="https://hsj00.github.io/blog/2025/PEALD-study-03/" rel="alternate" type="text/html" title="PEALD 내용 정리 03"/><published>2025-05-21T00:00:00+00:00</published><updated>2025-05-21T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2025/PEALD-study-03</id><content type="html" xml:base="https://hsj00.github.io/blog/2025/PEALD-study-03/"><![CDATA[<h1 id="하모닉-간섭">하모닉 간섭??</h1> <p>PEALD(Plasma-Enhanced Atomic Layer Deposition) 공정에서 RF 주파수를 13.56 MHz의 정수배로 사용하는 주된 이유 중 하나는 <strong>하모닉 주파수 간의 상호 간섭을 최소화하여 공정 안정성을 확보</strong>하기 위함이라고 한다. 아래는 <strong>Perplexity</strong>로 검색해본 내용을 정리한 내용이다.</p> <h2 id="하모닉harmonics이란">하모닉(Harmonics)이란?</h2> <ul> <li><strong>하모닉(고조파)</strong>은 기본 주파수(fundamental frequency, f0)의 정수배에 해당하는 주파수를 의미함<a href="https://resources.pcb.cadence.com/blog/2023-the-fundamental-frequency-and-harmonics-in-electronics">5</a></li> <li>기본 주파수가 13.56 MHz라면, 2차 하모닉은 27.12 MHz (2 x 13.56 MHz), 3차 하모닉은 40.68 MHz (3 x 13.56 MHz)가 됨</li> <li>모든 전자 장비는 의도치 않게 이러한 하모닉 성분을 방출할 수 있으며, 이를 <strong>스퓨리어스 에미션(spurious emission)</strong>이라고 함<a href="https://punchthrough.com/harmonics-part-1-introduction-to-harmonics-ble-2/">2</a></li> </ul> <h2 id="정수배-주파수-사용과-하모닉-간섭-방지의-원리">정수배 주파수 사용과 하모닉 간섭 방지의 원리</h2> <p>PEALD 공정에서 여러 RF 전원을 사용하거나, 하나의 RF 전원에서 발생하는 하모닉이 다른 주파수 대역에 영향을 미치는 것을 방지하기 위해 주파수 선택은 매우 중요</p> <ol> <li> <p><strong>주파수 분리 및 필터링 용이</strong>:</p> <ul> <li>기본 주파수의 정수배로 주파수를 설정하면, 각 주파수 대역이 명확하게 구분됨. 예를 들어, 13.56 MHz와 그의 2차 하모닉인 27.12 MHz는 서로 겹치지 않는 별도의 주파수 대역을 가짐</li> <li>이는 각 주파수 대역에 맞는 필터를 설계하여 원치 않는 하모닉 성분을 효과적으로 제거하거나 감쇠시키는 것을 용이하게 함. 만약 주파수가 정수배 관계가 아닌 비조화적인(non-harmonic) 관계라면, 주파수 스펙트럼이 복잡해지고 필터링이 어려워짐</li> </ul> </li> <li> <p><strong>비선형 시스템에서의 예측 가능성 및 제어 용이성</strong>:</p> <ul> <li>플라즈마는 <strong>비선형적인 전기적 특성</strong>을 가짐. 즉, 입력된 RF 전력에 대해 플라즈마 임피던스가 선형적으로 반응하지 않고, 다양한 하모닉 성분을 생성함<a href="https://www.impedans.com/wp-content/uploads/2021/12/MI01_RFSpectrometer.pdf">3</a></li> <li>기본 주파수의 정수배로 주파수를 사용하면, 생성되는 하모닉의 주파수를 예측하기 쉽고, 각 하모닉 성분이 플라즈마에 미치는 영향을 분석하고 제어하기 용이함</li> <li>만약 임의의 주파수들이 혼합되어 사용된다면, 이들 간의 상호 변조(intermodulation)로 인해 예측하기 어려운 복잡한 주파수 성분들이 발생하여 플라즈마 상태를 제어하기 어렵게 만듦</li> </ul> </li> <li> <p><strong>전자기 호환성(EMC) 및 규제 준수</strong>:</p> <ul> <li>FCC(미국 연방 통신 위원회)와 같은 규제 기관은 전자 장비가 특정 주파수 대역 외에서 과도한 전자기파를 방출하지 않도록 규제하는데<a href="https://punchthrough.com/harmonics-part-1-introduction-to-harmonics-ble-2/">2</a>, 이를 <strong>전자기 호환성(EMC) 테스트</strong>라고 함</li> <li>의도적으로 사용하는 주파수(예: 13.56 MHz)와 그 정수배 하모닉은 어느 정도 예측 가능하며, 이들의 방출 레벨을 규제 한도 내로 관리하기 위한 설계가 가능</li> <li>정수배가 아닌 복잡한 주파수 조합은 다양한 스퓨리어스 에미션을 발생시켜 EMC 테스트 통과를 어렵게 만들 수 있음</li> </ul> </li> </ol> <h2 id="하모닉-간섭-발생-시-문제점">하모닉 간섭 발생 시 문제점</h2> <p>하모닉 주파수 간에 또는 기본 주파수와 다른 기기의 작동 주파수 간에 상호 간섭이 발생하면 아래와 같은 문제 발생 가능</p> <ol> <li> <p><strong>플라즈마 불안정</strong>:</p> <ul> <li>원치 않는 주파수 성분이 플라즈마에 영향을 주어 플라즈마 밀도, 온도, 이온 에너지 분포 등이 불안정해질 수 있는데, 이는 증착 속도, 박막 두께 균일성, 박막 품질 등에 직접적인 영향을 미침<a href="https://www.impedans.com/wp-content/uploads/2021/12/MI01_RFSpectrometer.pdf">3</a></li> <li>특히, 플라즈마 임피던스의 변화를 민감하게 감지하여 공정 제어에 활용하는 경우(예: 종말점 검출), 하모닉 간섭은 이러한 센싱을 방해하여 공정 제어의 정확도를 떨어트림<a href="https://www.impedans.com/wp-content/uploads/2021/12/MI01_RFSpectrometer.pdf">3</a></li> </ul> </li> <li> <p><strong>공정 결과의 재현성 저하</strong>:</p> <ul> <li>간섭으로 인해 플라즈마 상태가 매번 다르게 형성되면, 동일한 레시피로 공정을 진행하더라도 일관된 박막 특성을 얻기 어려워짐</li> </ul> </li> <li> <p><strong>장비 손상 및 오작동</strong>:</p> <ul> <li>강한 하모닉 성분이 RF 매칭 네트워크나 전원 공급 장치에 과도한 스트레스를 주어 부품의 수명을 단축시키거나 손상을 유발할 수 있음</li> <li>또한, 다른 측정 장비나 제어 시스템에 영향을 주어 오작동을 일으킬 수 있음</li> </ul> </li> <li> <p><strong>수신기 감도 저하 (Self-Quieting 또는 Self-Jamming)</strong>:</p> <ul> <li>장비 자체에서 발생하는 원치 않는 하모닉 방출이 장비 내 다른 수신부(예: 플라즈마 모니터링 센서)의 감도를 떨어뜨릴 수 있음<a href="https://punchthrough.com/harmonics-part-1-introduction-to-harmonics-ble-2/">2</a></li> </ul> </li> <li> <p><strong>규제 위반</strong>:</p> <ul> <li>허용되지 않는 수준의 스퓨리어스 에미션은 FCC 등 규제 기관의 EMC 기준을 위반하여 장비 사용이 금지될 수 있음<a href="https://punchthrough.com/harmonics-part-1-introduction-to-harmonics-ble-2/">2</a></li> </ul> </li> </ol> <h2 id="내용-요약">내용 요약</h2> <p>PEALD 공정에서 RF 주파수를 기본 주파수의 정수배로 사용하는 것은 생성되는 하모닉을 예측하고 제어하여 상호 간섭을 최소화하고, 이를 통해 플라즈마의 안정성, 공정의 재현성, 그리고 장비의 신뢰성을 확보하기 위함이다. 하모닉 간섭이 발생하면 플라즈마 불안정, 공정 결과 불량, 장비 손상 등 다양한 문제를 야기할 수 있음</p> <hr/> <hr/>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Semiconductor"/><category term="ALD"/><category term="Atomic Layer Deposition"/><category term="PEALD"/><category term="Plasma Enhanced Atomic Layer Deposition"/><category term="Blog"/><summary type="html"><![CDATA[2025-05-21, PEALD study note 03]]></summary></entry><entry><title type="html">PEALD 내용 정리 04</title><link href="https://hsj00.github.io/blog/2025/PEALD-study-04/" rel="alternate" type="text/html" title="PEALD 내용 정리 04"/><published>2025-05-21T00:00:00+00:00</published><updated>2025-05-21T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2025/PEALD-study-04</id><content type="html" xml:base="https://hsj00.github.io/blog/2025/PEALD-study-04/"><![CDATA[<h1 id="rf-임피던스-ccp-icp">RF 임피던스?? CCP?? ICP??</h1> <p>PEALD 내용 공부하다가 모르는 용어들이 나와서 이번에도 어김없이 <strong>Perplexity</strong>의 도움을 받아 내용을 찾아보았다. 공부한 내용 까먹지 않고 나중에 찾아볼 수 있게끔 블로그에 업데이트 해두고자 한다.</p> <h3 id="임피던스란-무엇인가">임피던스란 무엇인가?</h3> <ul> <li><strong>임피던스(impedance)</strong>는 교류(AC) 회로에서 전류의 흐름을 방해하는 정도를 나타내는 값으로, 저항(resistance)과 유사한 개념</li> <li>저항이 직류(DC)에서 전류 흐름만을 방해하는 것과 달리, 임피던스는 교류에서 저항과 리액턴스(유도성·용량성 성분)를 모두 포함함</li> <li>임피던스를 도로에 비유하면, 저항은 도로에 깔린 과속방지턱(속도를 줄임)이고, 리액턴스는 도로의 오르막과 내리막(속도의 방향을 바꿈, 에너지가 저장됐다가 다시 방출됨)으로 생각할 수 있음</li> <li>자동차(전류)가 일정한 속도로 가려면 도로(회로)의 조건이 맞아야 하듯, RF 신호도 임피던스가 맞아야 손실 없이 잘 전달됨</li> </ul> <hr/> <h3 id="peald에서-임피던스와-임피던스-매칭의-의미">PEALD에서 임피던스와 임피던스 매칭의 의미</h3> <ul> <li><strong>임피던스 매칭:</strong> RF 전원 발생기에서 공급하는 에너지가 플라즈마 챔버로 최대한 손실 없이 전달되도록, 두 부분의 임피던스를 같게(보통 50Ω) 맞추는 작업</li> <li><strong>이유</strong>: 임피던스가 맞지 않으면, 일부 에너지가 반사되어(standing wave, 반사파) 플라즈마가 불안정해지고, 실제 플라즈마에 전달되는 파워가 줄어들며, 장비 손상 위험도 커짐<a href="https://www.sciencedirect.com/topics/materials-science/radio-frequency-sputtering">3</a></li> <li><strong>임피던스 매칭 회로</strong>: 가변 커패시터, 인덕터, 또는 PIN 다이오드, FET 스위치 등을 조합해 RF 신호의 임피던스를 조정<a href="https://patents.google.com/patent/US10229816B2/en">2</a>, <a href="https://www.analog.com/en/resources/technical-articles/radio-frequency-impedance-matching-calculations-and-simulations.html">3</a></li> </ul> <hr/> <h3 id="임피던스-변화가-peald에-미치는-영향">임피던스 변화가 PEALD에 미치는 영향</h3> <ul> <li><strong>매칭이 잘 되었을 때</strong>: RF 파워가 효율적으로 플라즈마에 전달되어 플라즈마 밀도, 반응성, 박막 균일성이 향상</li> <li><strong>매칭이 안 되었을 때</strong>: 반사파가 발생해 실제 플라즈마에 도달하는 파워가 줄고, 플라즈마가 불안정해져 박막 품질이 나빠질 수 있음<a href="https://www.analog.com/en/resources/technical-articles/radio-frequency-impedance-matching-calculations-and-simulations.html">3</a>, <a href="https://www.sciencedirect.com/topics/materials-science/radio-frequency-sputtering">7</a></li> </ul> <hr/> <h2 id="ccp와-icp의-개념-및-비교">CCP와 ICP의 개념 및 비교</h2> <table> <thead> <tr> <th>구분</th> <th>CCP (Capacitively Coupled Plasma)</th> <th>ICP (Inductively Coupled Plasma)</th> </tr> </thead> <tbody> <tr> <td><strong>플라즈마 발생 원리</strong></td> <td>평행판 전극 사이에 RF 전압 인가, 전기장으로 플라즈마 발생</td> <td>RF 전류가 흐르는 코일에서 자기장 유도, 이 자기장이 전기장을 만들어 플라즈마 발생</td> </tr> <tr> <td><strong>플라즈마 밀도</strong></td> <td>낮음 (10⁹~10¹⁰ cm⁻³)</td> <td>높음 (10¹¹~10¹² cm⁻³)</td> </tr> <tr> <td><strong>공정 압력</strong></td> <td>비교적 높음 (수십~수백 mTorr)</td> <td>낮음 (수 mTorr~수십 mTorr)</td> </tr> <tr> <td><strong>이온 에너지</strong></td> <td>높음 (기판에 충돌하는 이온 세기가 큼)</td> <td>낮음 (기판 손상 적음)</td> </tr> <tr> <td><strong>제어 특성</strong></td> <td>플라즈마 밀도와 이온 에너지 동시 제어 (분리 어려움)</td> <td>플라즈마 밀도와 이온 에너지 독립 제어 가능(기판 바이어스 별도 인가)</td> </tr> <tr> <td><strong>적용 예시</strong></td> <td>산화막, 질화막 증착, 저밀도 플라즈마 필요 공정</td> <td>고밀도 플라즈마 필요(식각, 금속 증착, 고종횡비 구조)</td> </tr> <tr> <td><strong>장점</strong></td> <td>장비 구조 단순, 저렴</td> <td>높은 플라즈마 밀도, 미세구조 적합, 균일성 우수</td> </tr> <tr> <td><strong>단점</strong></td> <td>플라즈마 밀도 한계, 기판 손상 위험</td> <td>장비 구조 복잡, 가격 높음</td> </tr> </tbody> </table> <ul> <li><strong>요약</strong>: <ul> <li><strong>CCP</strong>는 전극 사이에 RF 전압을 걸어 플라즈마를 만들며, 구조가 단순하고 저렴하지만 플라즈마 밀도가 낮고 기판 손상이 클 수 있음</li> <li><strong>ICP</strong>는 코일을 통해 자기장-전기장을 유도해 플라즈마를 만들며, 플라즈마 밀도가 높고, 이온 에너지와 플라즈마 밀도를 독립적으로 조절내할 수 있어 미세공정에 적합합니다<a href="https://blog.naver.com/ghyokim/222200844228">6</a>, <a href="https://blog.naver.com/jgw1030/221386120959">8</a>, <a href="https://sshmyb.tistory.com/199">9</a></li> </ul> </li> </ul> <hr/> <h2 id="내용-요약">내용 요약</h2> <ul> <li><strong>임피던스</strong>는 교류 신호가 회로에서 잘 흐를 수 있게 하는 ‘도로의 평탄함’과 같으며, PEALD에서는 RF 파워가 손실 없이 플라즈마에 전달되도록 임피던스 매칭이 필수적임</li> <li><strong>CCP와 ICP</strong>는 플라즈마 발생 방식과 특성이 다르며, 공정 목적과 박막 특성에 따라 선택됨</li> <li>임피던스 매칭이 잘 이루어져야 플라즈마가 안정적으로 발생하고, 원하는 박막 품질을 얻을 수 있음</li> </ul> <hr/> <hr/>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Semiconductor"/><category term="ALD"/><category term="Atomic Layer Deposition"/><category term="PEALD"/><category term="Plasma Enhanced Atomic Layer Deposition"/><category term="Blog"/><summary type="html"><![CDATA[2025-05-21, PEALD study note 04]]></summary></entry><entry><title type="html">PEALD 내용 정리 01</title><link href="https://hsj00.github.io/blog/2025/PEALD-study-01/" rel="alternate" type="text/html" title="PEALD 내용 정리 01"/><published>2025-05-20T00:00:00+00:00</published><updated>2025-05-20T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2025/PEALD-study-01</id><content type="html" xml:base="https://hsj00.github.io/blog/2025/PEALD-study-01/"><![CDATA[<h2 id="1-peald-기본-원리-및-공정-절차">1. PEALD 기본 원리 및 공정 절차</h2> <p><strong>Plasma-Enhanced Atomic Layer Deposition(PEALD)</strong>는 <strong>Thermal ALD</strong>와 달리 플라즈마를 반응 단계에 활용하여 저온에서 고품질의 박막 증착을 가능하게 한다. 일반적인 공정 단계는 다음과 같다.</p> <ol> <li><strong>전구체 주입</strong>: 기판 표면에 금속 전구체(예: TMA, TiCl₄)가 흡착</li> <li><strong>퍼징</strong>: 잔류 전구체 및 부산물을 제거</li> <li><strong>플라즈마 반응 단계</strong>: 반응 가스(예: O₂, NH₃)를 플라즈마로 활성화시켜 화학 반응을 유도</li> <li><strong>퍼징</strong>: 반응 부산물을 제거</li> </ol> <p><strong>Perplexity</strong>를 활용해서 다양한 PEALD 공정에 대해서 검색해보고 정리한 내용이다.</p> <h3 id="대표적-공정-사례">대표적 공정 사례</h3> <ul> <li><strong>Al₂O₃ 증착</strong>: TMA(Al(CH₃)₃) + O₂ 플라즈마 → 100°C에서 0.11 nm/cycle 성장률</li> <li><strong>TiN 증착</strong>: TiCl₄ + NH₃ 플라즈마 → 250°C에서 0.07 nm/cycle, Cl 잔류 &lt;1 at.%</li> <li><strong>Co 증착</strong>: Co(Cp)₂ + NH₃ 플라즈마 → 150°C에서 0.45 Å/cycle, RMS 거칠기 0.8 nm</li> </ul> <hr/> <h2 id="2-공정-결과에-영향을-주는-주요-인자">2. 공정 결과에 영향을 주는 주요 인자</h2> <table> <thead> <tr> <th><strong>인자</strong></th> <th><strong>영향 범위</strong></th> <th><strong>변화 시 효과</strong></th> <th><strong>최적화 사례</strong></th> </tr> </thead> <tbody> <tr> <td><strong>플라즈마 파워</strong></td> <td>50–400W (13.56 MHz 기준)</td> <td>↑파워 → 플라즈마 밀도 ↑ → 불순물 ↓, 밀도 ↑</td> <td>TiN 공정: 200W 시 Cl 잔류 0.8 at.%<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6174421/">7</a></td> </tr> <tr> <td><strong>플라즈마 가스</strong></td> <td>O₂, N₂, NH₃, H₂ 등</td> <td>가스 종류 → 박막 조성 변경 (예: O₂→SiO₂, NH₃→SiNₓ)</td> <td>N₂O 플라즈마로 SiO₂ 내 N 함유 → 절연막 신뢰성 ↑<a href="https://www.semanticscholar.org/paper/2bf5ebdcac70f7d44d098062df6f0f69a4a906fe">13</a></td> </tr> <tr> <td><strong>주파수</strong></td> <td>2 MHz (저에너지) – 100 MHz (고밀도)</td> <td>↑주파수 → 전자 밀도 ↑ → 표면 반응 균일성 개선</td> <td>Co 증착: 100MHz에서 C 잔류 3 at.%<a href="https://pubmed.ncbi.nlm.nih.gov/33404456/">3</a></td> </tr> <tr> <td><strong>기판 온도</strong></td> <td>RT–400°C</td> <td>↑온도 → 결정화 촉진, 밀도 ↑</td> <td>HfO₂ 300°C에서 유전율 25 달성<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9656191/">11</a></td> </tr> <tr> <td><strong>전구체 펄스 시간</strong></td> <td>0.1–5초</td> <td>↑시간 → 과포화 흡착 → CVD 모드 전환 위험</td> <td>Al₂O₃에서 TMA 0.5초 → Self-limiting 유지</td> </tr> <tr> <td><strong>플라즈마 노출 시간</strong></td> <td>1–30초</td> <td>↑시간 → 리간드 제거 완성 but 에칭 가능성 ↑</td> <td>SiO₂ 증착: 10초 노출 시 WER 2 nm/min<a href="https://www.e-asct.org/journal/view.html?doi=10.5757%2FASCT.2019.28.5.142">6</a></td> </tr> </tbody> </table> <hr/> <h2 id="3-인자-변화에-따른-공정-결과-변화">3. 인자 변화에 따른 공정 결과 변화</h2> <h3 id="31-플라즈마-파워-증가">3.1 플라즈마 파워 증가</h3> <ul> <li><strong>긍정적 영향</strong>: <ul> <li>플라즈마 밀도 증가로 전구체 분해 효율 ↑ → <strong>불순물(C, Cl) 감소</strong></li> <li>박막 밀도 ↑ → 전기적 특성(유전율, 저항률) 개선</li> </ul> </li> <li><strong>부정적 영향</strong>: <ul> <li>과도한 이온 에너지로 <strong>기판 손상</strong> 또는 <strong>표면 거칠기 증가</strong></li> <li><em>예시</em>: 400W에서 TiN 박막의 RMS 거칠기 1.2 nm → 200W 시 0.5 nm <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6174421/">7</a></li> </ul> </li> </ul> <h3 id="32-플라즈마-가스-변경">3.2 플라즈마 가스 변경</h3> <ul> <li><strong>O₂ → N₂O 전환</strong>: <ul> <li>SiO₂ 절연막에 N 0.4 at.% 도입 → <strong>누설 전류 30% 감소</strong> <a href="https://www.semanticscholar.org/paper/2bf5ebdcac70f7d44d098062df6f0f69a4a906fe">13</a></li> </ul> </li> <li><strong>NH₃ → H₂/N₂ 혼합 가스</strong>: <ul> <li>Co 박막의 C 잔류량 5 → 2 at.% 감소 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6174421/">7</a></li> </ul> </li> </ul> <h3 id="33-기판-온도-상승">3.3 기판 온도 상승</h3> <ul> <li><strong>Al₂O₃ 100 → 300°C</strong>: <ul> <li>박막 밀도 3.0 → 3.4 g/cm³ 증가, 유전율 7 → 9.2 향상 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9656191/">11</a></li> </ul> </li> <li><strong>한계점</strong>: <ul> <li>400°C 이상에서 TMA 열분해 시작 → CVD 모드 전환</li> </ul> </li> </ul> <h3 id="34-전구체-펄스-시간-연장">3.4 전구체 펄스 시간 연장</h3> <ul> <li><strong>TiCl₄ 0.5 → 2초</strong>: <ul> <li>TiN 두께 0.07 → 0.12 nm/cycle 증가 but Cl 잔류 1 → 3 at.% <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6174421/">7</a></li> </ul> </li> <li><strong>Self-limiting 위반</strong>: <ul> <li>과포화 시 <strong>island 성장</strong> 발생 → 균일성 ↓</li> </ul> </li> </ul> <hr/> <h2 id="4-내용-요약">4. 내용 요약</h2> <p>PEALD 공정의 최적화는 <strong>플라즈마 에너지</strong>와 <strong>열적 에너지</strong>의 균형을 통해 이뤄진다. 플라즈마 파워, 가스 종류, RF frequency 등은 박막의 화학적 조성과 물성을 결정하며, 기판 온도와 전구체 조건은 증착 메커니즘을 제어한다. 인자 간 상호작용을 체계적으로 분석하여 필요조건에 맞는 공정 윈도우를 확보해야한다.</p> <hr/>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Semiconductor"/><category term="ALD"/><category term="Atomic Layer Deposition"/><category term="PEALD"/><category term="Plasma Enhanced Atomic Layer Deposition"/><category term="Blog"/><summary type="html"><![CDATA[2025-05-20, PEALD study note 01]]></summary></entry><entry><title type="html">Github blog theme 교체 (`al-folio` theme 설치)</title><link href="https://hsj00.github.io/blog/2024/theme-change-to-al-folio-theme/" rel="alternate" type="text/html" title="Github blog theme 교체 (`al-folio` theme 설치)"/><published>2024-03-24T00:00:00+00:00</published><updated>2024-03-24T00:00:00+00:00</updated><id>https://hsj00.github.io/blog/2024/theme-change-to-al-folio-theme</id><content type="html" xml:base="https://hsj00.github.io/blog/2024/theme-change-to-al-folio-theme/"><![CDATA[<h2 id="jekyll-al-folio-theme">Jekyll <code class="language-plaintext highlighter-rouge">al-folio</code> theme</h2> <p>맥북도 새로 샀겠다, 포스팅도 오랜만에 올렸겠다 싶어서 이번 기회에 블로그 테마를 교체해보기로 했다. 사용한 테마는 다음과 같다.</p> <p><a href="https://al-folio.github.io/">al-folio blog example</a><br/> <a href="https://github.com/alshedivat/al-folio.git">al-folio theme github link</a></p> <hr/> <h2 id="why-did-i-change-the-theme-to-al-folio">Why did I change the theme to <code class="language-plaintext highlighter-rouge">al-folio</code>?</h2> <p>지금도 잘 쓰고있는 <code class="language-plaintext highlighter-rouge">jekyll-indigo</code> theme를 왜 <code class="language-plaintext highlighter-rouge">al-folio</code> theme로 변경하는가?</p> <ol> <li><code class="language-plaintext highlighter-rouge">jekyll-indigo</code>를 오래써서 기분 전환하려고</li> <li>맥북에어를 새로 사면서 로컬 드라이브에 기존 <code class="language-plaintext highlighter-rouge">jekyll-indigo</code>를 옮겨는 과정에서 원인을 찾지 못한 여러가지 에러들이 있었다. <ol> <li><code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code> 명령어로 local server 구동 실패</li> <li>새로 블로그 포스팅을 올렸을 때 블로그 웹사이트에 변경사항이 제대로 반영되지 않음</li> </ol> </li> <li>이러한 문제점들 외에 소위 ‘있어보이는’ 만듦새 때문에 바꾸고 싶단 생각이 들었다. <ol> <li>아카데믹한 블로깅에 특화되어있는 테마라서 괜히 뭔가 좀 그럴싸해 보였음</li> <li>추후에 <code class="language-plaintext highlighter-rouge">Publications</code> 탭을 커스터마이징 하게되면 논문 뿐만아니라 특허 서지 정보들도 끌어와서 업데이트 할 수 있을 것 같단 생각이 듦</li> <li>개인적인 관심사들을 아카이빙하기 좋아보였고, 위와 같은 장점들 때문에 블로그를 하나의 CV portfolio로 만들기 좀 더 수월할거라고 생각함</li> </ol> </li> </ol> <hr/> <h2 id="al-folio-setting"><code class="language-plaintext highlighter-rouge">al-folio</code> setting</h2> <p>이번에도 역시 블로그가 제대로 동작하게끔 설정하기까지 무수한 삽질이 있었고, 그 삽질 과정을 조금이라도 줄여준 보물같은 블로그들이 있었다. 아래는 삽질에 도움을 받은 블로그 목록이다.</p> <p><a href="https://yehyunsuh.github.io/">Yehyun Suh Github blog</a><br/> <a href="https://yehyunsuh.tistory.com/">Yehyun Suh Tistory blog</a><br/> <a href="https://george-gca.github.io/">George C. de Araújo Github blog</a></p> <p><code class="language-plaintext highlighter-rouge">jekyll-indio</code>를 사용했던 가장 큰 이유는 간결함에서 오는 세팅의 편의성과 웹과 모바일에서 표시되는 화면 구성의 차이가 거의 없기 때문이었는데, 그에 비하면 <code class="language-plaintext highlighter-rouge">al-folio</code>는 블로그가 어떤 식으로 작동하고 구현되는지 좀 더 깊은 이해도가 필요했다. 가령, <code class="language-plaintext highlighter-rouge">jekyll</code>과 <code class="language-plaintext highlighter-rouge">ruby</code>, <code class="language-plaintext highlighter-rouge">yaml</code>과 같은 것들을 조금은 더 알아야지 세팅이 수월했다. 물론 나는 아직도 잘 모르겠다. <code class="language-plaintext highlighter-rouge">Google</code>과 <code class="language-plaintext highlighter-rouge">ChatGPT</code>, <code class="language-plaintext highlighter-rouge">Copilot</code>이 없었다면 엄두도 못냈을 것이다. 일단 테마 변경부터 끝내놓고 자잘한 오류들은 천천히 처리해야할 것 같다. 첫 술에 배부를 순 없으니 일단 뭐든 되게 만들고 보자.</p> <h3 id="blog-structure">Blog structure</h3> <p>삽질을 해보며 내 나름대로 이해해본 <code class="language-plaintext highlighter-rouge">al-folio</code>의 구성과 작동 방식에 대해 정리해보고자 한다. 현재 활성화 시켜놓은 기능들에 대해서만 정리해놓고 추후에 다른 기능들을 더 활용하게되면 그건 그때 추가 포스팅을 하는걸로.</p> <h4 id="assets"><code class="language-plaintext highlighter-rouge">assets</code></h4> <p>프로필 사진이나, 첨부 파일, 이미지, 주피터 노트북, 폰트, <code class="language-plaintext highlighter-rouge">bib</code> 등등등 규칙에 맞게 폴더에 넣어두면 사용할 수 있는 것 같다. 내부 설정으로 폴더 위치를 양식에 맞게 자동으로 연결되게끔 만들어져있는 것 같다. 나중에 사진이나 파이썬 스크립트 파일, pdf 파일 같은 것들을 첨부하기 편리할 것 같다. 좀 더 써보면서 나중에 한 번 더 정리해보는걸로.</p> <h4 id="_posts"><code class="language-plaintext highlighter-rouge">_posts</code></h4> <p><code class="language-plaintext highlighter-rouge">markdown</code> format으로 작성한 글을 양식에 맞는 제목으로 만들어서 넣어두면 블로그 글이 포스팅된다. 일반적으로 제목 양식은 <code class="language-plaintext highlighter-rouge">yyyy-mm-dd-Put-a-Title-for-Your-Posting.md</code>이다.</p> <p><code class="language-plaintext highlighter-rouge">al-folio</code> repository에서 <code class="language-plaintext highlighter-rouge">_posts</code>에 있는 파일들을 보면 사용할 수 있는 기능들을 여러가지 예시 파일로 만들어 넣어두었다. 필요할 때마다 참고해서 작성하면 될 것 같다. 아카데믹한 블로깅에 강점이 있는 테마답게 수식이나 그래프, 주피터 노트북 같은 것들도 반응형으로 넣을 수 있는 것 같다. 당장 쓸 일 없으니 이런건 나중에 더 공부해보는걸로.</p> <h4 id="_pages"><code class="language-plaintext highlighter-rouge">_pages</code></h4> <p>각 <code class="language-plaintext highlighter-rouge">about.md</code>나 <code class="language-plaintext highlighter-rouge">cv.md</code>, <code class="language-plaintext highlighter-rouge">blog.md</code>와 같은 파일들은 제목과 동일한 이름을 갖는 블로그의 각 페이지 내용들과 연결되어있다. 파일 내용을 수정하면 블로그에 반영이 된다. <code class="language-plaintext highlighter-rouge">about.md</code>는 블로그 첫 화면 내용과 직접적으로 연결되어있는 내용이 포함되어있어서 좀 신경써서 수정했다.</p> <h4 id="_layouts"><code class="language-plaintext highlighter-rouge">_layouts</code></h4> <p><code class="language-plaintext highlighter-rouge">_layouts</code> 폴더엔 <code class="language-plaintext highlighter-rouge">*.liquid</code> 확장자를 갖는 파일들이 들어있다. 이 파일들은 블로그 홈페이지를 구성하는 각 페이지를 어떤 양식을 따라 렌더링할지 결정하는 정보들이 담겨있는 것 같다.</p> <p>임시로 블로그 포스팅 최상단에 <code class="language-plaintext highlighter-rouge">Table of Contents</code>가 나오게끔 설정하려고 <code class="language-plaintext highlighter-rouge">post.liquid</code> 파일 내용 일부를 수정했다.</p> <details> <summary><b>기존 코드</b></summary> {% raw %} <div id="markdown-content"> {{ content | toc }} </div> {% endraw %} </details> <p><br/></p> <details> <summary><b>수정한 코드</b></summary> {% raw %} <div id="markdown-content"> {% if page.toc %} <h2>Table of Contents</h2> {% endif %} {{ content | toc }} </div> {% endraw %} </details> <p><br/></p> <h4 id="_news"><code class="language-plaintext highlighter-rouge">_news</code></h4> <p>블로그 가장 첫 화면 <code class="language-plaintext highlighter-rouge">news</code> 항목에 업데이트 되는 내용이다. 한 줄당 파일 하나씩 사용하는 구조인 것 같다. 무슨 내용을 더 추가할지는 나중에 좀 더 고민해보는걸로.</p> <h4 id="_data"><code class="language-plaintext highlighter-rouge">_data</code></h4> <p>비활성화해둔 <code class="language-plaintext highlighter-rouge">CV</code>나 <code class="language-plaintext highlighter-rouge">people</code>, <code class="language-plaintext highlighter-rouge">teaching</code> 항목들의 <code class="language-plaintext highlighter-rouge">yml</code> 설정 파일들이 들어있다. 학문적인 블로깅에 특화되어있는 테마답게 대학원생이나 교수님들이 쓰기 딱 좋은 기능들인 것 같다.</p> <h4 id="_bibliography"><code class="language-plaintext highlighter-rouge">_bibliography</code></h4> <p><code class="language-plaintext highlighter-rouge">al-folio</code> theme의 강력한 강점 중 하나인 것 같다.</p> <p>아래는 <code class="language-plaintext highlighter-rouge">Google Scholar</code>에서 찾은, 내 이름이 포함된 출판 논문들의 서지 정보다. <code class="language-plaintext highlighter-rouge">bib</code> 파일로 만들어서 넣어두었다. 이렇게 입력을 해서 저장해두면 <code class="language-plaintext highlighter-rouge">Publications</code>에 내 이름이 들어간 논문들을 보여준다. <code class="language-plaintext highlighter-rouge">jekyll-scholar</code>가 <code class="language-plaintext highlighter-rouge">bib</code> 파일 정보를 읽어들여서 웹페이지 형태로 렌더링해서 뿌려주는 것 같다.</p> <details> <summary><b> `bib` file example </b></summary> <div> <div class="language-bib highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">@article</span><span class="p">{</span><span class="nl">han20171</span><span class="p">,</span>
  <span class="na">title</span><span class="p">=</span><span class="s">{1, 5-Pentanediol as an Oxygen Precursor for Atomic Layer Deposition of Zinc Oxide Thin Films}</span><span class="p">,</span>
  <span class="na">bibtex_show</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
  <span class="na">author</span><span class="p">=</span><span class="s">{Han, Seung-Joo and Shin, Seokhee and Kim, Sungjoon and Ko, Dong-Hyun and Jin, Zhenyu and Lee, Sun Young and Min, Yo-Sep}</span><span class="p">,</span>
  <span class="na">journal</span><span class="p">=</span><span class="s">{Chemistry of Materials}</span><span class="p">,</span>
  <span class="na">volume</span><span class="p">=</span><span class="s">{29}</span><span class="p">,</span>
  <span class="na">number</span><span class="p">=</span><span class="s">{8}</span><span class="p">,</span>
  <span class="na">pages</span><span class="p">=</span><span class="s">{3371--3374}</span><span class="p">,</span>
  <span class="na">year</span><span class="p">=</span><span class="s">{2017}</span><span class="p">,</span>
  <span class="na">publisher</span><span class="p">=</span><span class="s">{ACS Publications}</span><span class="p">,</span>

  <span class="na">html</span><span class="p">=</span><span class="s">{https://doi.org/10.1021/acs.chemmater.6b05300}</span><span class="p">,</span>
  <span class="na">pdf</span><span class="p">=</span><span class="s">{Han_Chem_Mater_2017_29_3371.pdf}</span><span class="p">,</span>
  <span class="na">selected</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
<span class="p">}</span>

<span class="nc">@article</span><span class="p">{</span><span class="nl">jin2014novel</span><span class="p">,</span>
  <span class="na">title</span><span class="p">=</span><span class="s">{Novel chemical route for atomic layer deposition of MoS 2 thin film on SiO 2/Si substrate}</span><span class="p">,</span>
  <span class="na">bibtex_show</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
  <span class="na">author</span><span class="p">=</span><span class="s">{Jin, Zhenyu and Shin, Seokhee and Han, Seung-Joo and Min, Yo-Sep and others}</span><span class="p">,</span>
  <span class="na">journal</span><span class="p">=</span><span class="s">{Nanoscale}</span><span class="p">,</span>
  <span class="na">volume</span><span class="p">=</span><span class="s">{6}</span><span class="p">,</span>
  <span class="na">number</span><span class="p">=</span><span class="s">{23}</span><span class="p">,</span>
  <span class="na">pages</span><span class="p">=</span><span class="s">{14453--14458}</span><span class="p">,</span>
  <span class="na">year</span><span class="p">=</span><span class="s">{2014}</span><span class="p">,</span>
  <span class="na">publisher</span><span class="p">=</span><span class="s">{Royal Society of Chemistry}</span><span class="p">,</span>

  <span class="na">html</span><span class="p">=</span><span class="s">{https://doi.org/10.1039/C4NR04816D}</span><span class="p">,</span>
  <span class="na">pdf</span><span class="p">=</span><span class="s">{Jin_Nanoscale_2014_6_14453.pdf}</span><span class="p">,</span>
  <span class="na">selected</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
<span class="p">}</span>

<span class="nc">@article</span><span class="p">{</span><span class="nl">kim2015highly</span><span class="p">,</span>
  <span class="na">title</span><span class="p">=</span><span class="s">{Highly uniform and vertically aligned SnO 2 nanochannel arrays for photovoltaic applications}</span><span class="p">,</span>
  <span class="na">bibtex_show</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
  <span class="na">author</span><span class="p">=</span><span class="s">{Kim, Jae-Yup and Kang, Jin Soo and Shin, Junyoung and Kim, Jin and Han, Seung-Joo and Park, Jongwoo and Min, Yo-Sep and Ko, Min Jae and Sung, Yung-Eun}</span><span class="p">,</span>
  <span class="na">journal</span><span class="p">=</span><span class="s">{Nanoscale}</span><span class="p">,</span>
  <span class="na">volume</span><span class="p">=</span><span class="s">{7}</span><span class="p">,</span>
  <span class="na">number</span><span class="p">=</span><span class="s">{18}</span><span class="p">,</span>
  <span class="na">pages</span><span class="p">=</span><span class="s">{8368--8377}</span><span class="p">,</span>
  <span class="na">year</span><span class="p">=</span><span class="s">{2015}</span><span class="p">,</span>
  <span class="na">publisher</span><span class="p">=</span><span class="s">{Royal Society of Chemistry}</span><span class="p">,</span>

  <span class="na">html</span><span class="p">=</span><span class="s">{https://doi.org/10.1039/C5NR00202H}</span><span class="p">,</span>
  <span class="na">pdf</span><span class="p">=</span><span class="s">{JY_Kim_Nanoscale_2015_7_8171.pdf}</span><span class="p">,</span>
  <span class="na">selected</span><span class="p">=</span><span class="s">{true}</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div> </div> </div> </details> <p><br/></p>]]></content><author><name>hsj00</name></author><category term="Github"/><category term="Blog"/><category term="Jekyll"/><category term="al-folio"/><summary type="html"><![CDATA[2024-03-24, Github blog theme change (`al-folio` theme)]]></summary></entry><entry><title type="html">Python으로 수열 계산 구현</title><link href="https://hsj00.github.io/blog/2024/Python-coding-01/" rel="alternate" type="text/html" title="Python으로 수열 계산 구현"/><published>2024-03-12T20:30:00+00:00</published><updated>2024-03-12T20:30:00+00:00</updated><id>https://hsj00.github.io/blog/2024/Python-coding-01</id><content type="html" xml:base="https://hsj00.github.io/blog/2024/Python-coding-01/"><![CDATA[<h1 id="수열-계산기">수열 계산기</h1> <p>가늘고 길게, 드문드문 이어져오는 파이썬 프로그래밍 공부의 새로운 결과물이다.</p> <p>ToC는 다음과 같다.</p> <ul> <li><a href="#수열-계산기">수열 계산기</a> <ul> <li><a href="#1-수열-계산기로-구현하고자-하는-기능">1. 수열 계산기로 구현하고자 하는 기능</a> <ul> <li><a href="#11-구현하려는-기능">1.1. 구현하려는 기능</a></li> <li><a href="#12-사용한-패키지">1.2. 사용한 패키지</a></li> </ul> </li> <li><a href="#2-sequencecalcpy">2. <code class="language-plaintext highlighter-rouge">SequenceCalc.py</code></a></li> <li><a href="#3-sequencepy">3. <code class="language-plaintext highlighter-rouge">sequence.py</code></a></li> </ul> </li> </ul> <h2 id="1-수열-계산기로-구현하고자-하는-기능">1. 수열 계산기로 구현하고자 하는 기능</h2> <h3 id="11-구현하려는-기능">1.1. 구현하려는 기능</h3> <p>다음 네 종류의 수열을 계산하는 계산기를 구현하고자 한다.</p> <ul> <li>Mean</li> <li>Sum</li> <li>min</li> <li>Max</li> </ul> <p>계산하려는 수열 종류는 다음과 같다.</p> <ul> <li>등차수열</li> <li>등비수열</li> <li>조화수열</li> <li>계차수열</li> <li>피보나치 수열</li> </ul> <h3 id="12-사용한-패키지">1.2. 사용한 패키지</h3> <p>기능 구현을 위해 <code class="language-plaintext highlighter-rouge">scipy</code> 파이썬 패키지를 <code class="language-plaintext highlighter-rouge">import</code>해서 등비중항과 조화중항 계산을 위해 사용했다.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 등비중항 및 조화중항의 계산
</span><span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">gmean</span><span class="p">,</span> <span class="n">hmean</span>
</code></pre></div></div> <p>다음 두 개의 파이썬 스크립트로 나눠서 기능을 구현했다.</p> <ul> <li><code class="language-plaintext highlighter-rouge">SequenceCalc.py</code>: 각 수열마다 계산 기능을 함수로 구현한 스크립트 파일이다.</li> <li><code class="language-plaintext highlighter-rouge">sequence.py</code>: 수열의 종류와 초항 입력, 공차/공비와 같은 수열의 특징적인 값 및 전체 항의 개수를 설정한다. <code class="language-plaintext highlighter-rouge">SequenceCalc.py</code>를 <code class="language-plaintext highlighter-rouge">import</code>해서 계산을 진행하는 스크립트 파일이다.</li> </ul> <h2 id="2-sequencecalcpy">2. <code class="language-plaintext highlighter-rouge">SequenceCalc.py</code></h2> <p>코드는 다음과 같다.</p> <details> <summary><b> Show me the code! </b></summary> <div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">gmean</span><span class="p">,</span> <span class="n">hmean</span>

<span class="c1"># Series calculator
# 1. Arithmetical sequence
# 2. Geometric sequence
# 3. Harmonic sequence
# 4. Difference sequence
# 5. Fibonacci sequence
</span>
<span class="c1"># Declaration for results of calculation and sequence list
</span><span class="n">sq_results</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span> <span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span> <span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span> <span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">:</span> <span class="bp">None</span><span class="p">}</span>
<span class="n">sq_length</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1"># Arithmetical sequence
</span>    <span class="n">sqa_difference</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common difference: </span><span class="sh">"</span><span class="p">))</span>
    <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common difference is </span><span class="si">{</span><span class="n">sqa_difference</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
  
    <span class="n">sq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span><span class="p">]</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>  
        <span class="n">sqa_next</span> <span class="o">=</span> <span class="n">sq_length</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">sqa_difference</span>
        <span class="n">sq_length</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">sqa_next</span><span class="p">)</span>
  
    <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>

    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_length</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">sq_length</span>

<span class="c1"># Geometric sequence
</span><span class="k">def</span> <span class="nf">generate_geometric_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>
    <span class="n">sqg_ratio</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common ratio: </span><span class="sh">"</span><span class="p">))</span>
    <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common ratio is </span><span class="si">{</span><span class="n">sqg_ratio</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>

    <span class="n">sq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span> <span class="o">*</span> <span class="n">sqg_ratio</span><span class="o">**</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">sq_range</span><span class="p">)]</span>

    <span class="k">if</span> <span class="n">sqg_ratio</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="n">sq_start</span> <span class="o">*</span> <span class="n">sq_range</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="n">sq_start</span> <span class="o">*</span> <span class="p">(</span><span class="n">sqg_ratio</span><span class="o">**</span><span class="n">sq_range</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">sqg_ratio</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
  
    <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">gmean</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>

    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_length</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">sq_length</span>

<span class="c1"># Harmonic sequence
</span><span class="k">def</span> <span class="nf">generate_harmonic_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>
    <span class="n">sqh_difference</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common difference: </span><span class="sh">"</span><span class="p">))</span>
    <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common difference is </span><span class="si">{</span><span class="n">sqh_difference</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>


    <span class="n">sq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="p">(</span><span class="n">sq_start</span><span class="o">*</span><span class="n">sqh_difference</span><span class="o">*</span><span class="n">i</span><span class="p">))</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">sq_range</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>

    <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">hmean</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>

    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_length</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">sq_length</span>

<span class="c1"># Difference sequence including sub-sequence
</span><span class="k">def</span> <span class="nf">generate_difference_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">,</span> <span class="n">subsq_type</span><span class="p">):</span>
    <span class="n">subsq_length</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">diff_seq</span> <span class="o">=</span> <span class="p">[]</span>
  
    <span class="c1"># 'if' statements for sub-sequence calculation
</span>    <span class="c1"># Sub: Arithmetical sequence
</span>    <span class="k">if</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">sub_sqa_difference</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common difference: </span><span class="sh">"</span><span class="p">))</span>
        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common difference is </span><span class="si">{</span><span class="n">sub_sqa_difference</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
  
        <span class="n">subsq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span><span class="p">]</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>  
            <span class="n">sqa_next</span> <span class="o">=</span> <span class="n">subsq_length</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">sub_sqa_difference</span>
            <span class="n">subsq_length</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">sqa_next</span><span class="p">)</span>
      
        <span class="n">diff_seq</span> <span class="o">=</span> <span class="p">[</span><span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)]</span>

        <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>

        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">subsq_length</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Diff-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">diff_seq</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">diff_seq</span>
  
    <span class="c1"># Sub: Geometric sequence
</span>    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
        <span class="n">sub_sqg_ratio</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common ratio: </span><span class="sh">"</span><span class="p">))</span>
        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common ratio is </span><span class="si">{</span><span class="n">sub_sqg_ratio</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>

        <span class="n">subsq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span> <span class="o">*</span> <span class="n">sub_sqg_ratio</span><span class="o">**</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">sq_range</span><span class="p">)]</span>

        <span class="n">diff_seq</span> <span class="o">=</span> <span class="p">[</span><span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)]</span>

        <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>

        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">subsq_length</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Diff-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">diff_seq</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">diff_seq</span>
  
    <span class="c1"># Sub: Difference sequence
</span>    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
        <span class="n">sub_sqh_difference</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Common difference: </span><span class="sh">"</span><span class="p">))</span>
        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Common difference is </span><span class="si">{</span><span class="n">sub_sqh_difference</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>

        <span class="n">subsq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="p">(</span><span class="n">sq_start</span><span class="o">*</span><span class="n">sub_sqh_difference</span><span class="o">*</span><span class="n">i</span><span class="p">))</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">sq_range</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>

        <span class="n">diff_seq</span> <span class="o">=</span> <span class="p">[</span><span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)]</span>

        <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>

        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">subsq_length</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Diff-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">diff_seq</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">diff_seq</span>
  
    <span class="c1"># Sub: Fibonacci sequence
</span>    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
        <span class="n">subsq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_start</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>
            <span class="n">subsqf_next</span> <span class="o">=</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span>
            <span class="n">subsq_length</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">subsqf_next</span><span class="p">)</span>

        <span class="n">diff_seq</span> <span class="o">=</span> <span class="p">[</span><span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">subsq_length</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)]</span>

        <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>
        <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">diff_seq</span><span class="p">)</span>

        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
        <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">subsq_length</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Diff-seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">diff_seq</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">diff_seq</span>

<span class="c1"># Fibonacci sequence
</span><span class="k">def</span> <span class="nf">generate_fibonacci_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>
    <span class="n">sq_length</span> <span class="o">=</span> <span class="p">[</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_start</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">):</span>
        <span class="n">sqf_next</span> <span class="o">=</span> <span class="n">sq_length</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">sq_length</span> <span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span>
        <span class="n">sq_length</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">sqf_next</span><span class="p">)</span>

    <span class="n">sq_mean</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_sum</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_min</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>
    <span class="n">sq_max</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">sq_length</span><span class="p">)</span>

    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Mean</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_mean</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Sum</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_sum</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">min</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_min</span>
    <span class="n">sq_results</span><span class="p">[</span><span class="sh">"</span><span class="s">Max</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sq_max</span>

    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Result: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_results</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Seq list: </span><span class="sh">"</span><span class="p">,</span> <span class="n">sq_length</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">sq_results</span><span class="p">,</span> <span class="n">sq_length</span>

<span class="c1"># Declaration for executing script function directly
</span><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Sequence calculator</span><span class="sh">"</span><span class="p">)</span>
  
    <span class="n">sq_start</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Initial value: </span><span class="sh">"</span><span class="p">))</span>
    <span class="n">sq_range</span> <span class="o">=</span> <span class="nf">round</span><span class="p">(</span><span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Total terms: </span><span class="sh">"</span><span class="p">)))</span>
  
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">&lt; Arithmetical sequence &gt;</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">generate_arithmetical_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
  
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">&lt; Geometric sequence &gt;</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">generate_geometric_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
  
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">&lt; Harmonic sequence &gt;</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">generate_harmonic_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
  
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">&lt; Difference sequence &gt;</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">generate_difference_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">,</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-sequence: </span><span class="sh">"</span><span class="p">)))</span>
  
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">&lt; Fibonacci sequence &gt;</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">generate_fibonacci_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
</code></pre></div> </div> </div> </details> <p><br/></p> <h2 id="3-sequencepy">3. <code class="language-plaintext highlighter-rouge">sequence.py</code></h2> <p>코드는 다음과 같다.</p> <details> <summary><b> Show me the code! </b></summary> <div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">SequenceCalc</span> <span class="kn">import</span> <span class="o">*</span>

<span class="c1"># Series calculator
# 1. Arithmetical sequence
# 2. Geometric sequence
# 3. Harmonic sequence
# 4. Difference sequence
# 5. Fibonacci sequence
</span>
<span class="k">def</span> <span class="nf">sequence_calculator</span><span class="p">():</span>
  
    <span class="n">sq_type</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="n">sequence_info</span> <span class="o">=</span> <span class="bp">None</span>
  
    <span class="c1"># Input step for sequence condition decision
</span>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">sq_start</span> <span class="o">=</span> <span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Sequence start: </span><span class="sh">"</span><span class="p">))</span>
        <span class="n">sq_range</span> <span class="o">=</span> <span class="nf">round</span><span class="p">(</span><span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Sequence length: </span><span class="sh">"</span><span class="p">)))</span>
        <span class="n">sq_type</span> <span class="o">=</span> <span class="nf">round</span><span class="p">(</span><span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Sequence_type (1. Arithmetical, 2. Geometric, 3. Harmonic, 4. Difference, 5. Fibonacci): </span><span class="sh">"</span><span class="p">)))</span>
      
        <span class="n">sequence_type</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="k">if</span> <span class="mi">1</span> <span class="o">&lt;=</span> <span class="n">sq_type</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">sq_type</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">sequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Arithmetical sequence</span><span class="sh">"</span>
                <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">sequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                <span class="nf">generate_arithmetical_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">elif</span> <span class="n">sq_type</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
                <span class="n">sequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Geometric sequence</span><span class="sh">"</span>
                <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">sequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                <span class="nf">generate_geometric_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">elif</span> <span class="n">sq_type</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
                <span class="n">sequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Harmonic sequence</span><span class="sh">"</span>
                <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">sequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                <span class="nf">generate_harmonic_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">elif</span> <span class="n">sq_type</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
                <span class="n">sequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Difference sequence</span><span class="sh">"</span>
                <span class="n">subsq_type</span> <span class="o">=</span> <span class="nf">round</span><span class="p">(</span><span class="nf">float</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Sub-sequence_type (1. Arithmetical, 2. Geometric, 3. Harmonic, 4. Fibonacci): </span><span class="sh">"</span> <span class="p">)))</span>
                <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                        <span class="n">subsequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Arithmetical sequence</span><span class="sh">"</span>
                        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sub-sequence type is </span><span class="si">{</span><span class="n">subsequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                        <span class="c1"># generate_arithmetical_sequence(sq_start, sq_range)
</span>                      
                    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
                        <span class="n">subsequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Geometric sequence</span><span class="sh">"</span>
                        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">subsequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                        <span class="c1"># generate_geometric_sequence(sq_start, sq_range)
</span>                      
                    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
                        <span class="n">subsequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Harmonic sequence</span><span class="sh">"</span>
                        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">subsequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                        <span class="c1"># generate_harmonic_sequence(sq_start, sq_range)
</span>                      
                    <span class="k">elif</span> <span class="n">subsq_type</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
                        <span class="n">subsequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Fibonacci sequence</span><span class="sh">"</span>
                        <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">subsequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                        <span class="c1"># generate_fibonacci_sequence(sq_start, sq_range)
</span>                      
                    <span class="k">else</span><span class="p">:</span>
                        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Invalid subsequence type. Please enter a number from </span><span class="sh">'</span><span class="s">1</span><span class="sh">'</span><span class="s"> to </span><span class="sh">'</span><span class="s">4</span><span class="sh">'</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                        <span class="k">continue</span>
                    <span class="k">break</span>

                <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">sequence_type</span><span class="si">}</span><span class="s"> is calculating based on </span><span class="si">{</span><span class="n">subsequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                <span class="nf">generate_difference_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">,</span> <span class="n">subsq_type</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">elif</span> <span class="n">sq_type</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
                <span class="n">sequence_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Fibonacci sequence</span><span class="sh">"</span>
                <span class="n">sequence_info</span> <span class="o">=</span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">The initial term of the sequence is </span><span class="si">{</span><span class="n">sq_start</span><span class="si">}</span><span class="s">, and the length of the sequence is </span><span class="si">{</span><span class="n">sq_range</span><span class="si">}</span><span class="s">. The sequence type is </span><span class="si">{</span><span class="n">sequence_type</span><span class="si">}</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>
                <span class="nf">generate_fibonacci_sequence</span><span class="p">(</span><span class="n">sq_start</span><span class="p">,</span> <span class="n">sq_range</span><span class="p">)</span>
                <span class="k">break</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Invalid sequence type. Please enter a number from </span><span class="sh">'</span><span class="s">1</span><span class="sh">'</span><span class="s"> to </span><span class="sh">'</span><span class="s">5</span><span class="sh">'</span><span class="s">.</span><span class="sh">"</span><span class="p">)</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="nf">sequence_calculator</span><span class="p">()</span>
</code></pre></div> </div> </div> </details> <p><br/></p> <hr/> ]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Python"/><category term="Mac"/><category term="Programming"/><category term="Study"/><category term="Note"/><category term="math"/><summary type="html"><![CDATA[240312 `Python coding - sequence calculation`]]></summary></entry><entry><title type="html">macOS 다시 설치하고 설정하기 02 (작성중)</title><link href="https://hsj00.github.io/blog/2020/mac-setting-02/" rel="alternate" type="text/html" title="macOS 다시 설치하고 설정하기 02 (작성중)"/><published>2020-12-24T20:30:00+00:00</published><updated>2020-12-24T20:30:00+00:00</updated><id>https://hsj00.github.io/blog/2020/mac-setting-02</id><content type="html" xml:base="https://hsj00.github.io/blog/2020/mac-setting-02/"><![CDATA[<h1 id="macbook-setting">MACBOOK setting</h1> <p>맥북 세팅할 때마다 헤매서 나중에 다시 보려고 모아서 정리해둔 노트 두 번째다.</p> <p>ToC는 다음과 같다.</p> <ul> <li><a href="#macbook-setting">MACBOOK setting</a> <ul> <li><a href="#1-venv">1. <code class="language-plaintext highlighter-rouge">venv</code></a></li> <li><a href="#2-settingsjson">2. <code class="language-plaintext highlighter-rouge">settings.json</code></a></li> <li><a href="#3-tasksjson">3. <code class="language-plaintext highlighter-rouge">tasks.json</code></a></li> <li><a href="#references">References</a></li> </ul> </li> </ul> <h2 id="1-venv">1. <code class="language-plaintext highlighter-rouge">venv</code></h2> <p><code class="language-plaintext highlighter-rouge">Python 3.6</code>부터 <code class="language-plaintext highlighter-rouge">pyvenv</code>가 폐지되었고, <code class="language-plaintext highlighter-rouge">venv</code> 명령어를 이용해서 가상환경을 설정하라고 권장하고 있다. 해당 내용은 <a href="/mac-setting-01">이전 포스팅</a>에도 남겼다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="nt">-m</span> venv &lt;임의의 가상환경 이름&gt;
</code></pre></div></div> <p>이 방법으로 가상환경을 활성화 시키면 터미널 프롬프트 앞에 <code class="language-plaintext highlighter-rouge">(.venv)</code>가 나타난다. 이때부터 패키지는 로컬과 가상환경 각각에서 독립적으로 설치된다. 설치 경로가 달라졌는지, 잘 설치됐는지 보려면 <code class="language-plaintext highlighter-rouge">which pip</code>, <code class="language-plaintext highlighter-rouge">pip list</code>를 이용하면 된다.</p> <p>이때 조금 헤맸는데, 터미널 설정해줄 때 <code class="language-plaintext highlighter-rouge">~/.zshrc</code> 설정에 문제가 있어서 <code class="language-plaintext highlighter-rouge">pip</code> 실행 파일 경로에 혼선이 생겼다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">python</span><span class="o">=</span>/usr/local/bin/python3
<span class="nb">alias </span><span class="nv">pip</span><span class="o">=</span>/usr/local/bin/pip3
</code></pre></div></div> <p>다음과 같이 <code class="language-plaintext highlighter-rouge">pip3</code>와 <code class="language-plaintext highlighter-rouge">python3</code>를 <code class="language-plaintext highlighter-rouge">pip</code>와 <code class="language-plaintext highlighter-rouge">python</code>으로 설정해주면 문제가 없다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">python3</span><span class="o">=</span>python
<span class="nb">alias </span><span class="nv">pip3</span><span class="o">=</span>pip
</code></pre></div></div> <p>경로가 아니라 명령어를 대치해주는 설정으로 바꿔주니 가상환경과 로컬에서의 패키지 설치가 독립적으로 움직였다.</p> <p><code class="language-plaintext highlighter-rouge">.venv/pyvenv.cfg</code>를 열어보면 다음과 같은 설정줄이 써있다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>include-system-site-packages <span class="o">=</span> <span class="nb">false</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">false</code>가 아니라 <code class="language-plaintext highlighter-rouge">true</code>로 설정하면 로컬에 설치된 패키지를 공유해서 사용할 수 있다.</p> <h2 id="2-settingsjson">2. <code class="language-plaintext highlighter-rouge">settings.json</code></h2> <p>이거 설정하는게 아직도 헷갈리고 잘 이해가 안가는데, 일단 아직까지 문제가 없어서 해당 설정으로 사용하려고 여기에 저장해둔다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"python.pythonPath"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/.venv/bin/python3.9"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.venvFolders"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"${workspaceFolder}/.venv"</span><span class="p">],</span><span class="w">
    </span><span class="nl">"python.envFile"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/.env"</span><span class="p">,</span><span class="w">

    </span><span class="nl">"python.linting.pylintEnabled"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.linting.pylintPath"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pylint"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.linting.flake8Enabled"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.linting.flake8Path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"flake8"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.linting.flake8Args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"--max-line-length=100"</span><span class="p">],</span><span class="w">
    
    </span><span class="nl">"python.formatting.provider"</span><span class="p">:</span><span class="w"> </span><span class="s2">"black"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.formatting.blackPath"</span><span class="p">:</span><span class="w"> </span><span class="s2">"black"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"python.formatting.blackArgs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"--line-length"</span><span class="p">,</span><span class="w"> </span><span class="s2">"100"</span><span class="p">],</span><span class="w">
    </span><span class="nl">"python.formatting.autopep8Args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"--max-line-length"</span><span class="p">,</span><span class="w"> </span><span class="s2">"120"</span><span class="p">,</span><span class="w"> </span><span class="s2">"--experimental"</span><span class="p">],</span><span class="w">
    </span><span class="nl">"python.formatting.yapfArgs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"--style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"{based_on_style: chromium, indent_width: 20}"</span><span class="p">],</span><span class="w">
    
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>각 항목마다 설정하는 의미나 방법이 있을텐데 잘 모르겠어서 일단 여기저기서 긁어놓은 내용을 그대로 붙여넣었다. 나중에 공부하면서 수정사항이 생기면 포스팅에 반영해서 수정해야겠다.</p> <h2 id="3-tasksjson">3. <code class="language-plaintext highlighter-rouge">tasks.json</code></h2> <p>지금 이게 제일 골치다. 이거 설정해둔게 있는데 지금 다 날아가서 다시 해야한다. 일단 이건 나중에 추가하는걸로.</p> <h2 id="references">References</h2> <hr/> ]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Python"/><category term="Mac"/><category term="Programming"/><category term="Study"/><category term="Note"/><summary type="html"><![CDATA[201224 `macOS setting AtoZ for me`]]></summary></entry><entry><title type="html">2020년 온라인 KIPRIS 활용 세미나 요약 노트 (3): 특허 정보 검색 실습</title><link href="https://hsj00.github.io/blog/2020/KIPRIS-seminar-03/" rel="alternate" type="text/html" title="2020년 온라인 KIPRIS 활용 세미나 요약 노트 (3): 특허 정보 검색 실습"/><published>2020-12-06T19:30:00+00:00</published><updated>2020-12-06T19:30:00+00:00</updated><id>https://hsj00.github.io/blog/2020/KIPRIS-seminar-03</id><content type="html" xml:base="https://hsj00.github.io/blog/2020/KIPRIS-seminar-03/"><![CDATA[<p><a href="http://www.kipris.or.kr">KIPRIS</a>에서 진행하는 활용 세미나를 들으며 정리한 내용을 블로그 포스팅으로 남긴다.</p> <p>세 번째 포스팅은, <strong>“특허 정보 검색 실습”</strong>에 대한 강의를 듣고 요약/정리한 것이다. KIPRIS를 활용해서 찾고자 하는 PI를 검색하고 활용할 수 있는 방향에 대한 내용으로 강의가 진행됐고, 창원상공회의소 박장훈 과장님이 강의를 진행하셨다.</p> <p>최근엔 <a href="https://www.keywert.com/">키워트</a>란 특허 검색 플랫폼에서 유료 서비스도 제공하는 것 같다. 나처럼 업무에 활용하거나 관심 분야에 대한 기술 동향 파악을 목적으로 한다면 KIPRIS의 기능만 가지고도 넘치게 활용할 수 있어보인다. 무료로 제공하는 플랫폼이지만 제공하는 기능만큼은 무료 이상의 가치라고 생각한다.</p> <p>검색 실습 방법은 강의 영상을 참고하거나 KIPRIS 홈페이지에 나와있는 검색 실습을 따라해보면 금방 익숙해질 수 있을 것이다.</p> <p><a href="http://www.kipris.or.kr/khome/onlineSeminar/edu_view.jsp?gubun=S&amp;mnum=3">이번 강의</a>도 링크를 남겨둔다. 이것도 언제 링크가 사라질지 모르겠지만.</p> <p>ToC는 다음과 같다.</p> <ul> <li><a href="#3-특허정보검색-실습---kipris를-활용한-효율적인-특허정보-검색-방법">3. 특허정보검색 실습 - KIPRIS를 활용한 효율적인 특허정보 검색 방법</a> <ul> <li><a href="#0-kipris-개요">0. KIPRIS 개요</a></li> <li><a href="#1-특허검색의-목적">1. 특허검색의 목적</a> <ul> <li><a href="#1-중소기업에서-활용하는-예">(1) 중소기업에서 활용하는 예</a></li> <li><a href="#2-일반인이-활용하는-예">(2) 일반인이 활용하는 예</a></li> <li><a href="#3-특허검색을-하는-주된-이유---정보의-가치이며-재산의-가치이다">(3) 특허검색을 하는 주된 이유 - ‘정보의 가치이며, 재산의 가치이다.’</a></li> <li><a href="#4-특허검색을-하는-주된-이유---나만의-경쟁력-확보">(4) 특허검색을 하는 주된 이유 - ‘나만의 경쟁력 확보’</a></li> </ul> </li> <li><a href="#2-특허정보검색---초보자-검색">2. 특허정보검색 - 초보자 검색</a></li> <li><a href="#3-특허정보검색---일반검색">3. 특허정보검색 - 일반검색</a></li> </ul> </li> </ul> <hr/> <h1 id="3-특허정보검색-실습---kipris를-활용한-효율적인-특허정보-검색-방법">3. 특허정보검색 실습 - KIPRIS를 활용한 효율적인 특허정보 검색 방법</h1> <h2 id="0-kipris-개요">0. KIPRIS 개요</h2> <ul> <li><a href="www.kipris.or.kr">KIPRIS 홈페이지</a> - 링크</li> <li>특허청이 보유한 <strong>국내외 지식재산권 관련(서지/기술/행정/심판 등)</strong>의 정보를 DB로 구축하여 국민 누구나 인터넷을 통해 무료로 검색/열람할 수 있도록 <strong>특허청이 제공하고 한국특허정보원이 운영하는 대국민 특허정보검색 서비스</strong></li> </ul> <ol> <li>이용자 수준에 맞는 검색기능 <ul> <li>단순한 화면 구성</li> <li>초보자가 쉽게 검색할 수 있도록 항목별 검색 제공</li> </ul> </li> <li>지식재산권 관련 다양한 정보제공 <ul> <li>특허/실용신안/디자인/상표/심판 등 국내 지식재산권 정보</li> <li>미국, 유럽, 일본 등 12개 국가 해외특허정보</li> </ul> </li> <li>검색기능 외에 다양한 부가기능 <ul> <li>나의 관심 특허서비스</li> <li>찾아가는 특허서비스</li> <li>특허검색툴바</li> <li>마이폴더</li> <li>유사 검색식 보기</li> <li>동의어 사전</li> <li>인기검색어</li> <li>온라인 다운로드</li> <li>검색식 저장</li> <li>내 검색식 보기</li> <li>etc.</li> </ul> </li> </ol> <hr/> <h2 id="1-특허검색의-목적">1. 특허검색의 목적</h2> <h3 id="1-중소기업에서-활용하는-예">(1) 중소기업에서 활용하는 예</h3> <ul> <li>기술개발을 위한 조사 - 연구기획/개발, 개발동향파악</li> <li>특허출원을 위한 조사 - 특허권리화 가능성 판단, 청구범위 확인</li> <li>특허분쟁을 위한 조사 - 분쟁대응 인용문헌 확보, 침해판단 및 회피설계 자료</li> </ul> <h3 id="2-일반인이-활용하는-예">(2) 일반인이 활용하는 예</h3> <ul> <li>아이디어 기술에 대한 궁금증</li> <li>정보가치활용, 재산적 가치 취득을 위해</li> </ul> <h3 id="3-특허검색을-하는-주된-이유---정보의-가치이며-재산의-가치이다">(3) 특허검색을 하는 주된 이유 - ‘정보의 가치이며, 재산의 가치이다.’</h3> <ul> <li>신규 영역 개척 - 기술개발/예측, 동향파악, 권리보호 및 침해 방지</li> <li>기존 영역 확장 - 이중투자, 중복연구 방지, 유효 청구항 확보</li> <li>기술 거래 활용 - 기술이전, 공동연구, 라이센싱</li> </ul> <h3 id="4-특허검색을-하는-주된-이유---나만의-경쟁력-확보">(4) 특허검색을 하는 주된 이유 - ‘나만의 경쟁력 확보’</h3> <ul> <li>경쟁자와 차별화할 수 있는 재산적 가치 형성 <ul> <li>특허/디자인/상표와 같은 지식재산권을 통한 제품 혹은 서비스의 권리 보호</li> <li>특허망 형성을 통한 경쟁자와의 격차 유지</li> </ul> </li> <li>관심 산업군에 대한 이해도 향상 <ul> <li>관심 분야의 기술 동향 파악 및 주요 기술에 대한 이해도 향상</li> <li>특허망 또는 출원 전략을 분석해 기술 로드맵 유추</li> </ul> </li> </ul> <hr/> <h2 id="2-특허정보검색---초보자-검색">2. 특허정보검색 - 초보자 검색</h2> <ul> <li><a href="http://beginner.kipris.or.kr/beginner/beginnerMain.jsp">KIPRIS 초보자용 검색 페이지</a> - 링크 <ul> <li>검색 안내 동영상을 통해 해당 기능 실습 가능 <ul> <li>단계별 검색: 아이디어 명칭, 발명의 기술/구성요소, 기술의 특징, IPC/CPC, etc.</li> <li>번호 검색: 출원/공개/등록번호</li> <li>인명 검색</li> <li>문장 검색</li> </ul> </li> </ul> </li> </ul> <hr/> <h2 id="3-특허정보검색---일반검색">3. 특허정보검색 - 일반검색</h2> <ul> <li>스마트 검색 메뉴 - 각 항목별로 사용자가 취사 선택하여 자료 검색 가능</li> <li>검색식 예시 또는 검색 도움말을 참고하여 검색 가능</li> </ul>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Patent"/><category term="KIPRIS"/><category term="Seminar"/><category term="Study"/><category term="Note"/><summary type="html"><![CDATA[201206 `2020 KIPRIS online seminar note (3) - PI retrieval exercise`]]></summary></entry><entry><title type="html">2020년 온라인 KIPRIS 활용 세미나 요약 노트 (2): 스타트업의 특허 A-Z</title><link href="https://hsj00.github.io/blog/2020/KIPRIS-seminar-02/" rel="alternate" type="text/html" title="2020년 온라인 KIPRIS 활용 세미나 요약 노트 (2): 스타트업의 특허 A-Z"/><published>2020-12-04T19:30:00+00:00</published><updated>2020-12-04T19:30:00+00:00</updated><id>https://hsj00.github.io/blog/2020/KIPRIS-seminar-02</id><content type="html" xml:base="https://hsj00.github.io/blog/2020/KIPRIS-seminar-02/"><![CDATA[<p><a href="http://www.kipris.or.kr">KIPRIS</a>에서 진행하는 활용 세미나를 들으며 정리한 내용을 블로그 포스팅으로 남긴다.</p> <p>두 번째 포스팅은, <strong>“스타트업의 특허 A-Z”</strong>란 제목의 강의 내용을 내 나름대로 요약/정리했다. ‘스타트업의 개념’, ‘좋은 특허의 확보’, ‘특허 전략의 중요성’과 같은 주제로 강의를 진행했고, 강의를 진행하신 분은 <a href="http://www.innerbottle.com/">(주)이너보틀</a>의 오세일 대표님이 진행하셨다. (주)이너보틀은 화장품 용기와 관련된 특허로 투자 유치와 수출 계약까지 따낸 IP기반 기술 개발 기업이다. 내 기준에서 가장 이상적인 형태의 스타트업 모델이 아닐까 싶다. 지속가능성과 인류 문제 해결 관점에서 이익 창출과 가치 창출 모두 놓치지 않는 기업이란 생각이 든다.</p> <p><a href="http://www.kipris.or.kr/khome/onlineSeminar/edu_view.jsp?gubun=S&amp;mnum=2">이번 강의</a>도 링크를 남겨둔다. 언제 링크가 사라질지 모르겠지만.</p> <p>ToC는 다음과 같다.</p> <ul> <li><a href="#2-스타트업의-특허-a-z">2. 스타트업의 특허 A-Z</a> <ul> <li><a href="#1-스타트업이란">(1) 스타트업이란?</a> <ul> <li><a href="#어떤-문제를-해결하고-싶은가">어떤 문제를 해결하고 싶은가?</a></li> <li><a href="#스타트업이란-무엇인가">스타트업이란 무엇인가?</a></li> </ul> </li> <li><a href="#2-패러다임의-변화---재식재산의-중요성">(2) 패러다임의 변화 - 재식재산의 중요성</a> <ul> <li><a href="#사업의-보호">사업의 보호</a></li> </ul> </li> <li><a href="#3-지식재산권이란---지식재산의-특징">(3) 지식재산권이란? - 지식재산의 특징</a></li> <li><a href="#4-좋은-특허의-확보">(4) 좋은 특허의 확보</a></li> <li><a href="#5-특허전략의-중요성">(5) 특허전략의 중요성</a></li> <li><a href="#6-사업의-보호-및-지식재산권의-활용">(6) 사업의 보호 및 지식재산권의 활용</a></li> <li><a href="#7-결론">(7) 결론</a></li> </ul> </li> </ul> <hr/> <h1 id="2-스타트업의-특허-a-z">2. 스타트업의 특허 A-Z</h1> <h2 id="1-스타트업이란">(1) 스타트업이란?</h2> <ul> <li>독창적인 아이디어 또는 기술을 가지고 시장에 접근하는 기업 또는 비지니스 <h3 id="어떤-문제를-해결하고-싶은가">어떤 문제를 해결하고 싶은가?</h3> </li> <li>혁신은 문제점의 발견에서 시작된다 <ul> <li>여러 사람이 느끼는 문제점인가? <h3 id="스타트업이란-무엇인가">스타트업이란 무엇인가?</h3> </li> </ul> </li> <li>새로운 시작의 시작</li> <li>차별성을 가지고 매주 5% 성장하는 기업</li> <li>스타트업의 핵심 자산: EXCLUSIVE IDEA, 독창적인 기술/아이디어</li> </ul> <hr/> <h2 id="2-패러다임의-변화---재식재산의-중요성">(2) 패러다임의 변화 - 재식재산의 중요성</h2> <h3 id="사업의-보호">사업의 보호</h3> <ul> <li>지식재산권: 저작권, 산업재산권 <ul> <li>산업재산권: 특허권, 실용신안권, 상표권, 디자인권</li> </ul> </li> </ul> <ol> <li>정보접근의 용이성: ex) kipris, Google, etc.</li> <li>기술의 평준화: ex) 스마트폰 - 구매시 기술 우위보다 소비자 감성 등이 고려사항으로 등장</li> <li>차별화의 고민: 소비 성향의 다각화로 인해 제품의 차별성이 중요한 고민 요소가 됨</li> </ol> <hr/> <h2 id="3-지식재산권이란---지식재산의-특징">(3) 지식재산권이란? - 지식재산의 특징</h2> <ul> <li>창조적 가치(지식재산)를 제3자가 무단실시할 수 없게 보호해주는 법률 장치 <ol> <li>무형의 재화</li> <li>비가역적 전파성</li> <li>복제의 용이성</li> </ol> </li> </ul> <hr/> <h2 id="4-좋은-특허의-확보">(4) 좋은 특허의 확보</h2> <ul> <li>특허법 제97조: “특허발명의 보호범위는 특허청구범위에 기재된 사항에 의하여 정하여진다.” <ul> <li>같은 기술이라도 특허를 어떻게 확보하느냐에 따라 특허의 가치는 천차만별</li> </ul> </li> </ul> <hr/> <h2 id="5-특허전략의-중요성">(5) 특허전략의 중요성</h2> <ul> <li>핵심기술이 무엇인지 파악하여 <strong>꼭 필요한 특허</strong>를 취득할 것 - 불필요한 특허는 비용일 뿐 사업에 도움이 되지 않는다 <ul> <li>사전에 한꺼번에 여러가지를 고려한 특허들을 출원할 경우, 정작 사업화가 됐을 경우 변경 사항이 반영된 적합한 특허 받기 어려운 경우가 생길 수 있음</li> </ul> </li> <li>서비스의 시작/판매에 앞어 특허를 고민할 것 - 특허출원에 앞서 서비스를 시작하는 경우 <strong>중국</strong>, <strong>유럽</strong>에서는 보호가 어려움 <ul> <li>특허법 제 30조 공지예외적용제도 <ul> <li>출원인/발명자가 기술을 공개해도 1년 안에 특허를 출원할 경우, 이전에 공지시킨 사항을 특허청에 증거로 제출하여 신규성/진보성 판단에 있어서 예외 적용이 가능</li> <li>중국, 유럽의 경우, 예외 사항 허용이 어려움</li> </ul> </li> </ul> </li> <li>프로토 타입으로부터 발전할 <strong>최종 결과물</strong>을 염두해둘 것 - 최종 서비스, 제품을 보호하지 못하는 특허는 무용지물</li> <li>특허가 내 서비스/제품을 <strong>제대로 보호</strong>할 수 있는지 체크할 것 - 형식적인 특허 등록은 불필요한 비용을 낳을 뿐</li> <li><strong>사업의 진행상황을 고려</strong>하여 해외 특허를 확보할 것 - PCT <ul> <li>특허는 속지주의의 성격을 가짐</li> <li>한국 출원 - 기초출원 <ul> <li>조약우선권 - 1년 내에 출원 국가 진입</li> <li>PCT 출원 - 한국 출원을 기초출원으로 함</li> </ul> </li> </ul> </li> </ul> <hr/> <h2 id="6-사업의-보호-및-지식재산권의-활용">(6) 사업의 보호 및 지식재산권의 활용</h2> <ul> <li>Idea - Design - Prototype - Mass production <ul> <li>Idea: 선행기술조사를 통한 아이디어 정리</li> <li>Design: 선행기술조사를 통해 정리한 내용을 가지고 구체적인 방향성 도출</li> <li>Mass production: 제3자가 무단실시하는 경우를 막는 방향으로 지재권 활용</li> </ul> </li> </ul> <hr/> <h2 id="7-결론">(7) 결론</h2> <ul> <li>스타트업에게 지식재산권은 선택이 아닌 필수</li> <li>가치는 지켜질 때 커진다</li> </ul>]]></content><author><name>hsj00</name></author><category term="blog"/><category term="Patent"/><category term="KIPRIS"/><category term="Seminar"/><category term="Study"/><category term="Note"/><summary type="html"><![CDATA[201204 `2020 KIPRIS online seminar note (2) - Patent AtoZ for start-up`]]></summary></entry></feed>